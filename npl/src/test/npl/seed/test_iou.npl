package seed

const ISSUER = 'issuer';
const PAYEE = 'payee';

@test
function test_initial_amount_owed(test: Test) -> {
    var iou = Iou[ISSUER, PAYEE](100);

    test.assertEquals(100, iou.getAmountOwed[ISSUER](), "Amount owed should equal initial value");
};

@test
function test_amount_owed_after_pay(test: Test) -> {
    var iou = Iou[ISSUER, PAYEE](100);
    var remaining = iou.pay[ISSUER](50);

    test.assertEquals(50, iou.getAmountOwed[ISSUER](), "Amount owed should reflect payment");
    test.assertEquals(50, remaining, "Amount owed should reflect payment");
};

@test
function test_pay_negative_amount(test: Test) -> {
    var iou = Iou[ISSUER, PAYEE](100);

    test.assertFails(function() returns Unit -> iou.pay[ISSUER](-10), "Paying negative amounts should fail");
};

@test
function test_overpaying(test: Test) -> {
    var iou = Iou[ISSUER, PAYEE](100);

    test.assertFails(function() returns Unit -> iou.pay[ISSUER](101), "Overpaying should fail");
};
